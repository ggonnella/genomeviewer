#!/usr/bin/env ruby

require 'drb'

if ARGV.size != 1 then
  raise "Usage: gt_server_test gff3_file"
end

gff3_file = ARGV[0]

DRb.start_service
GTServer = DRbObject.new(nil, 'druby://localhost:7777')

puts "--> TestCall: #{GTServer.test_call}"

errormsg = GTServer.gff3_errors(gff3_file)
if errormsg then
  raise "Error: #{errormsg}"
end

style = GTServer.style_new

seqids = GTServer.gff3_seqids(gff3_file)
puts "--> Types in #{gff3_file}:"
types = GTServer.gff3_feature_types(gff3_file)
types.each do |type|
  puts type
end

seqids.each do |seq_id|
  range = GTServer.gff3_range(gff3_file, seq_id)
  puts "--> Seq_id: #{seq_id}"
  puts "    Range: #{range.begin}..#{range.end}"
  image_info = GTServer.generate("TEST", gff3_file, seq_id, range, style, 800, false)
  png_stream = GTServer.img("TEST")
  puts "png_stream.size=" + png_stream.size.to_s
  image_info.get_hotspots.each do |x1, y1, x2, y2, feature|
    puts "x1=#{x1} y1=#{y1} x2=#{x2} y2=#{y2} type=#{feature[:type]}"
  end
end
