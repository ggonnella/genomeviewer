#!/usr/bin/env ruby

require 'drb'

if ARGV.size != 1 then
  raise "Usage: gt_server_test gff3_file"
end

gff3_file = ARGV[0]

DRb.start_service
GTServer = DRbObject.new(nil, 'druby://localhost:7777')

puts GTServer.test_call()

errormsg = GTServer.gff3_errors(gff3_file)
if errormsg then
  raise "Error: #{errormsg}"
end

config = GTServer.config_new

seqids = GTServer.gff3_seqids(gff3_file)
puts "types in #{gff3_file}:"
types = GTServer.gff3_feature_types(gff3_file)
types.each do |type|
  puts type
end

[40,4].each do |margins_value|

  puts "**** Margins #{margins_value} ****"
  config.set_num("format","margins", margins_value)

  [0.0, 0.1].each do |zoom_factor|
    seqids.each do |seq_id|
      range = GTServer.gff3_range(gff3_file, seq_id)
      range = (range.begin*(1+zoom_factor))..(range.end*(1-zoom_factor))
      puts " ->Seq_id: #{seq_id} Range: #{range.begin}..#{range.end}"
      GTServer.img_and_map_generate("TEST", gff3_file, seq_id, range, config, 800, false)
      png_stream = GTServer.img("TEST")
      puts "png_stream.size=" + png_stream.size.to_s
      GTServer.img_and_map_destroy("TEST")
    end
  end 
end 
